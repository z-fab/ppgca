name: projeto-finance
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    networks:
      - cav-internal
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    networks:
      - cav-internal
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - cav-internal

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    networks:
      - cav-internal
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200" # Temporariamente exposto para configuração inicial
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    networks:
      - zfab
      - cav-internal
    ports:
      - "5601:5601" # Porta do Kibana para Caddy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_BASEPATH=/projeto-finance/kibana
      - SERVER_REWRITEBASEPATH=true
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5601
    depends_on:
      - elasticsearch

  producer:
    build:
      context: ..
      dockerfile: docker/python-dockerfile
    container_name: producer
    networks:
      - cav-internal
    env_file:
      - ../.env
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - TZ=America/Sao_Paulo
    command: >
      bash -c "/wait-for-it.sh kafka:9092 --timeout=20 --strict -- /wait-for-it.sh elasticsearch:9200 --timeout=20 --strict -- python main.py producer"


  consumer:
    build:
      context: ..
      dockerfile: docker/python-dockerfile
    container_name: consumer
    networks:
      - cav-internal
    env_file:
      - ../.env
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGODB_HOST=mongodb
      - TZ=America/Sao_Paulo
    command: >
      bash -c "/wait-for-it.sh kafka:9092 --timeout=20 --strict -- /wait-for-it.sh elasticsearch:9200 --timeout=20 --strict -- python main.py consumer"
  
  api:
    build:
      context: ..
      dockerfile: docker/python-dockerfile
    container_name: api
    networks:
      - zfab
      - cav-internal
    env_file:
      - ../.env
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/
      - ROOT_PATH=/projeto-finance/api
      - TZ=America/Sao_Paulo
    command: >
      python api/main.py

volumes:
  zookeeper_data:
  kafka_data:
  mongodb_data:
  elasticsearch_data:

networks:
  cav-internal:
    driver: bridge
  zfab:
    name: zfab-network
    external: true
