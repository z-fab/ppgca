name: projeto-finance
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  producer:
    build:
      context: ..
      dockerfile: docker/python-dockerfile
    container_name: producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    command: >
      bash -c "/wait-for-it.sh kafka:9092 --timeout=20 --strict -- python main.py producer"


  consumer:
    build:
      context: ..
      dockerfile: docker/python-dockerfile
    container_name: consumer
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGODB_HOST=mongodb
    command: >
      bash -c "/wait-for-it.sh kafka:9092 --timeout=20 --strict -- python main.py consumer"
  api:
    build:
      context: ..
      dockerfile: docker/python-dockerfile
    container_name: api
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/
    command: >
      python api/main.py

volumes:
  zookeeper_data:
  kafka_data:
  mongodb_data: